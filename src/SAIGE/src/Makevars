#MPI_CPPFLAGS = $(shell mpic++ -showme:compile)
#MPI_LDFLAGS = $(shell mpic++ -showme:link)

MPI_LDFLAGS = -L/opt/cray/pe/mpich/8.1.31/ofi/amd/6.0/lib -lmpi
MPI_CPPFLAGS = -I/opt/cray/pe/mpich/8.1.31/ofi/amd/6.0/include/

HIPCC = hipcc
HIP_LIBS = -L/opt/rocm-6.4.0/lib -lamdhip64 -lhiprtc -lhipblas -lhipfft -Wl,-rpath,/opt/rocm-6.4.0/lib

PKG_CPPFLAGS = -I/opt/rocm-6.4.0/include -D__HIP_PLATFORM_AMD__=1
PKG_CPPFLAGS += $(MPI_CPPFLAGS)
PKG_CPPFLAGS += \
-I ../thirdParty/cget/include \
-I ../thirdParty/cget/lib \
-I ../thirdParty/cget/lib64 \
-D SQLITE_ENABLE_COLUMN_METADATA -O3 -fpic -Wall -Wextra -pedantic  -DARMA_64BIT_WORD=1 -D__STDC_FORMAT_MACROS \
-fsigned-char \
-fopenmp \
-DUSE_pbdMPI \
-DUSE_GPU

CXX_STD = CXX11

# Replace -llapack with openblas.

PKG_LIBS = $(ZLIB_LIB) $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) -L../thirdParty/cget/lib/ -L../thirdParty/cget/lib64/ -lsuperlu -lzstd -L../lib64
PKG_LIBS += -L/sw/summit/spack-envs/base/opt/linux-rhel8-ppc64le/gcc-9.1.0/openblas-0.3.17-ehvho6jt4ooly45nfunnwqq3kp476x5h/lib -lopenblas
PKG_LIBS += $(MPI_LDFLAGS)
PKG_LIBS += $(HIP_LIBS)

#OBJECTS = RcppExports.o SAIGE_fitGLMM_fast.o getMem.o VCF.o BGEN.o PLINK.o SAIGE_test.o SPA_binary.o SPA.o SPA_survival.o UTIL.o Main.o test.o CCT.o
OBJECTS = gpuSymMatMult_hip.o RcppExports.o SAIGE_fitGLMM_fast.o getMem.o VCF.o BGEN.o PLINK.o SAIGE_test.o SPA_binary.o SPA.o SPA_survival.o UTIL.o Main.o test.o CCT.o Binary_HyperGeo.o Binary_ComputeExact.o Binary_global.o Binary_ComputeExactSKATO.o Binary_resampling.o Binary_Permu_SKAT.o ER_binary_func.o LDmat.o

%.o: %_hip.cpp
	$(HIPCC) -O2 -c -fPIC --offload-arch=gfx906 -I/opt/rocm-6.4.0/include/hipblas/ -L/opt/rocm-6.4.0//lib -x hip $< -o $@


all: $(SHLIB)
$(SHLIB): ${OBJECTS} Makevars
SAIGE_fitGLMM_fast.o: gpuSymMatMult_hip.hpp
gpuSymMatMult_hip.o: gpuSymMatMult_hip.hpp

